plugins {
//    id 'java'
//    id 'org.springframework.boot' version '3.0.0'
//    id 'io.spring.dependency-management' version '1.1.0'
//    id 'org.hibernate.orm' version '6.1.5.Final'
////    id 'org.graalvm.buildtools.native' version '0.9.18'
//    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'io.springfox:springfox-boot-starter:3.0.0'  // swagger
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.google.code.gson:gson:2.10'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'javax.persistence:javax.persistence-api'
    annotationProcessor 'javax.annotation:javax.annotation-api'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
//    annotationProcessor 'javax.annotation:javax.annotation-api'
//    annotationProcessor 'javax.persistence:javax.persistence-api'

    implementation 'com.fasterxml.uuid:java-uuid-generator:4.0.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.14.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가
}

tasks.named('test') {
    useJUnitPlatform()
}

//hibernate {
//    enhancement {
//        lazyInitialization true
//        dirtyTracking true
//        associationManagement true
//    }
//}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
//            srcDirs = ["$projectDir/src/main/java", "$projectDir/src/main/generated"]
        }
    }
}
